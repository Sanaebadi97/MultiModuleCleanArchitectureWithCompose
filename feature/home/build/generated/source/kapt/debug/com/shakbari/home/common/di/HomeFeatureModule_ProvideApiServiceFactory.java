// Generated by Dagger (https://dagger.dev).
package com.shakbari.home.common.di;

import com.shakbari.home.common.api.HomeRetrofitApiService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeFeatureModule_ProvideApiServiceFactory implements Factory<HomeRetrofitApiService> {
  private final Provider<Retrofit> retrofitProvider;

  public HomeFeatureModule_ProvideApiServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public HomeRetrofitApiService get() {
    return provideApiService(retrofitProvider.get());
  }

  public static HomeFeatureModule_ProvideApiServiceFactory create(
      Provider<Retrofit> retrofitProvider) {
    return new HomeFeatureModule_ProvideApiServiceFactory(retrofitProvider);
  }

  public static HomeRetrofitApiService provideApiService(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(HomeFeatureModule.INSTANCE.provideApiService(retrofit));
  }
}
