// Generated by Dagger (https://dagger.dev).
package com.shakbari.home.domain.usecase;

import com.shakbari.home.domain.repository.UserRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class UserUseCase_Factory implements Factory<UserUseCase> {
  private final Provider<UserRepository> userRepositoryProvider;

  public UserUseCase_Factory(Provider<UserRepository> userRepositoryProvider) {
    this.userRepositoryProvider = userRepositoryProvider;
  }

  @Override
  public UserUseCase get() {
    return newInstance(userRepositoryProvider.get());
  }

  public static UserUseCase_Factory create(Provider<UserRepository> userRepositoryProvider) {
    return new UserUseCase_Factory(userRepositoryProvider);
  }

  public static UserUseCase newInstance(UserRepository userRepository) {
    return new UserUseCase(userRepository);
  }
}
