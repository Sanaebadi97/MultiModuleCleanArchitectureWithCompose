// Generated by Dagger (https://dagger.dev).
package com.shakbari.home.common.di;

import com.shakbari.home.domain.repository.UserRepository;
import com.shakbari.home.domain.repository.UserRepositoryImpl;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HomeFeatureModule_ProvideUserRepositoryFactory implements Factory<UserRepository> {
  private final Provider<UserRepositoryImpl> userRepositoryImplProvider;

  public HomeFeatureModule_ProvideUserRepositoryFactory(
      Provider<UserRepositoryImpl> userRepositoryImplProvider) {
    this.userRepositoryImplProvider = userRepositoryImplProvider;
  }

  @Override
  public UserRepository get() {
    return provideUserRepository(userRepositoryImplProvider.get());
  }

  public static HomeFeatureModule_ProvideUserRepositoryFactory create(
      Provider<UserRepositoryImpl> userRepositoryImplProvider) {
    return new HomeFeatureModule_ProvideUserRepositoryFactory(userRepositoryImplProvider);
  }

  public static UserRepository provideUserRepository(UserRepositoryImpl userRepositoryImpl) {
    return Preconditions.checkNotNullFromProvides(HomeFeatureModule.INSTANCE.provideUserRepository(userRepositoryImpl));
  }
}
