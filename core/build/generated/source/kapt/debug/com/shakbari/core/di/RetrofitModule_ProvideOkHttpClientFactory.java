// Generated by Dagger (https://dagger.dev).
package com.shakbari.core.di;

import com.shakbari.core.di.utils.RetrofitConfig;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RetrofitModule_ProvideOkHttpClientFactory implements Factory<OkHttpClient> {
  private final Provider<RetrofitConfig> retrofitUtilsProvider;

  public RetrofitModule_ProvideOkHttpClientFactory(Provider<RetrofitConfig> retrofitUtilsProvider) {
    this.retrofitUtilsProvider = retrofitUtilsProvider;
  }

  @Override
  public OkHttpClient get() {
    return provideOkHttpClient(retrofitUtilsProvider.get());
  }

  public static RetrofitModule_ProvideOkHttpClientFactory create(
      Provider<RetrofitConfig> retrofitUtilsProvider) {
    return new RetrofitModule_ProvideOkHttpClientFactory(retrofitUtilsProvider);
  }

  public static OkHttpClient provideOkHttpClient(RetrofitConfig retrofitUtils) {
    return Preconditions.checkNotNullFromProvides(RetrofitModule.INSTANCE.provideOkHttpClient(retrofitUtils));
  }
}
